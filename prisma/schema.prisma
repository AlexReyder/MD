generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String?
  surname       String?
  phone         String   @unique
  password      String
  role          Role     @default(USER)
  emailVerified Boolean  @default(false) @map("email_verified")
  emailToken    String   @default(uuid()) @map("email_token")
  recoveryToken String   @default(uuid()) @map("recovery_token")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Cart          Cart[]
  Order         Order[]
}

enum Role {
  ADMIN
  USER
}

enum OrderStatus {
  ACCEPT
  VERIFICATION
  DECLINE
}

enum PaymentType {
  TRANSFER
  DEFFERED
}

enum DeliveryType {
  CDEK
  MAILRUSSIA
  YANDEX
  FIVEPOST
}

model Category {
  id        String         @id @default(uuid())
  name      String
  slug      String
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  product   ShoppingCard[]
}

model Band {
  id        String         @id @default(uuid())
  name      String
  slug      String
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  products  ShoppingCard[]
}

// model MusicStyle {
//   id        String         @id @default(uuid())
//   name      String
//   slug      String
//   createdAt DateTime       @default(now())
//   updatedAt DateTime       @updatedAt
//   products  ShoppingCard[]
//   @@map("music_style")
// }

// model Manufacturer {
//   id        String         @id @default(uuid())
//   name      String
//   slug      String
//   createdAt DateTime       @default(now())
//   updatedAt DateTime       @updatedAt
//   products  ShoppingCard[]
// }

// model Sizes {
//   id        String         @id @default(uuid())
//   name      String
//   slug      String
//   createdAt DateTime       @default(now())
//   updatedAt DateTime       @updatedAt
//   products  ShoppingCard[]
// }

// model Colors {
//   id        String         @id @default(uuid())
//   name      String
//   slug      String
//   createdAt DateTime       @default(now())
//   updatedAt DateTime       @updatedAt
//   products  ShoppingCard[]
// }

model ShoppingCard {
  id             String     @id @default(uuid())
  name           String
  slug           String
  isActive       Boolean    @default(true) @map("is_active")
  isNew          Boolean    @default(false) @map("is_new")
  isBestseller   Boolean    @default(false) @map("is_bestseller")
  isInStock      Boolean    @map("is_in_stock")
  articleNumber  String     @unique @map("article_number")
  colors         String[]
  sizes          String[]
  description    String?
  material       String
  specifications String?
  price          Int
  images         Json
  details        Json
  categoryId     String
  categorySlug   String
  bandId         String
  bandName       String
  Category       Category[]
  Band           Band[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  @@map("shopping_card")
}

model Cart {
  id        String      @id @default(uuid())
  status    OrderStatus @default(VERIFICATION)
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  products  Json
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Order {
  id             String       @id @default(uuid())
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  payment        PaymentType
  delivery       DeliveryType
  products       Json
  details        Json
  promocodeValue String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Promocode {
  id        String   @id @default(uuid())
  value     String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
